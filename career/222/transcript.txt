awesome awesome let's start uh right on train okay so I first of all thank you so much for subscribing to this Channel and basically resonating with this uh it means a ton I always wanted like folks to be really deep into engineering and I'm really happy that I've been able to crack that somehow so thank you so much every single one of you for supporting uh okay all right again uh thank you for all the questions uh I received surprisingly I received 123 questions and uh some of them are truly amazing will touch upon them a hundred percent in this one and especially the research paper one I really want to talk about uh how should someone approach uh uh reading papers and it and why it is very important to read papers as software Engineers right okay so let's start with the first one so uh I'll and uh I'll just use the first name I don't want to disclose the personal identifiable information in any way so I just uh in the question that I asked you folks to submit I ask for the name I'll just refer to first name so that uh you know who asked that question okay uh first thing okay let's just start with research paper itself because that is anywhere top of our mind because that's really important to have career growth uh with respect to research papers a lot of people actually find it difficult to read papers right but I would really like to say that reading papers is very important the sooner you start reading the papers the better it would be so and I totally get this sense that it's difficult to read papers it's very dense uh we are just starting out we don't know how to go about it and whatnot there are tons of questions around it but what I would recommend and this is exactly what I've done right so what I did is I still went through it when I started I didn't understand a thing in what paper says oh my God it's so dense and all but I still went through it the reason I went through it because I wanted to understand so the approach that I took in Reading papers has always been I make first iteration so first of all assume for now assume that I have a paper to read right then we'll also talk about uh how to pick a research paper in some other live stream but assume that you have a paper to read now when you have a paper at hand now what you can do is first came through all the pages of the paper just Kim what does skimming mean just go through random lines you should not be worrying about understanding them but just going through them randomly with this what happens is when you are skimming you form big dots in your head that hey something like this is covered here something like this is covered over here something like this exists over here right once you have those big dots forming then you start reading the paper line by line when you do that when you start reading the paper line by line what then those big circles that you had now starts to connect like small connection basic connection happens and then you start understanding things a bit more it's still okay to not understand a thing right but at least some dots will connect another thing all dots would connect it takes time it takes long time for that to happen so now what happens is that some dots get connected now it's time so while you're reading it some dots are connecting but you will obviously stumble upon something that you have no idea about make a note of it on a separate page so either highlight PDF that is fine if that works for you so what I used to do I do something very different nowadays but what I used to do was I used to uh just make a note of things that I did not understand right or new words that are stumbled upon and then simple DFS right once I've gone through first pass I understood one thing then I move forward I start to see okay this is one thing that I did not understand then I go to Google Search that um explore things if I understand not good enough if don't it's okay to have fade dots in your head you don't want everything to be very crystal clear in your head but first pass do that do DFS to try to understand the underlying concept once that is done make second iteration on top of it now the dots will be even more strengthened the connections will be even more strengthened and which is what you need so what typically happens it takes you four iterations of a paper to understand it really well right go for it do that really important now how does this affect you in career growth you would say hey but we build web applications why should we read research papers I'll tell you simple thing will you like do you really want to build web applications basic crud throughout your life you want to solve big challenging engineering problems right now for you to do that you want to be prepared for that situation now how do you prepare yourself for that situation this advanced concepts they come in very handy no one will say that hey this is exactly paper that you would have to implement but but idea that you it has helped me a ton and I'm not even exaggerating because I have habit of reading papers frequently what has happened is I'm able to grasp new technologies very easily because it has structured my brain in a way that I'm able to comprehend everything and and that is what you need to be a better engineer that no matter what tool what technology what framework what tech stack is thrown at you you should be able to break it down into simple things and solve for it right so yeah that's how and why you should prep us how I read papers I might create a video on it like and I will create a video on it definitely a very in-depth on how I've done it and why you should do it too but build a habit of reading papers one paper a month fine if it takes you one paper two months that's also fine but go through that grind it will help you in the long run trust me like I am very thankful to my college professors who gave us reading assignments where everything was research papers but that has helped me I never understood a thing in that but it helps us right okay now I'll take now I'll take start and I'll start taking questions from uh the form that asks for you to submit but in case you have any questions there is a Google form Linked In the description fill that out I'll take your questions through that but I already have 123 questions a ton of things that I would want to cover okay there is some very interesting thing around uh this thing so uh with respect to Career growth someone has asked that uh how what is the best way to approach a promotion internally from senior to staff to be specific so this question was asked by Urban uh ranges in two to five years of work X that what is the best way to approach promotion internally from Seniors to staff to be specific the answer to this question is there in my video which is coming tomorrow right how to become staff at Frank or sounds clickbaity but I had no intention to do that but the staff role at Fang is very dependent staff at any company uh so that's why I have that in title and I've I've discussed Five Points that you should be focusing on when you would want to internally get promoted from senior to staff so that is covered there second is great question again what to do if relationship with manager is not the best in the team very formal and not great now this is something that for everyone to have a stellar career growth this becomes very essential you need to earn the trust of your manager a lot of people relate or rather correlate this to boot licking it's not bootlegging when you have a good relationship with your manager it does not mean that you are just trying to make him or her happy and you are being that good kid around right it's not about that it's not about you going against your teammates having a good relationship with your manager is very important because your manager is the one that is bringing you projects if you are earning Trust of your manager by delivering things on time that is exactly what matters the most right and have a good relationship with the manager now if your manager itself is not reciprocating due to any reason talk to that thing which are manager in one on one that hey is there something we are going on because most managers try to be jolly try to be happy try to be friendly with the direct reports in case that is not happening try to bring the topic up in your one-on-one and that really matters once you have earned the trust of your manager you'll get good projects you'll get promotions and it's not just because you had good like you were have a good relationship with the method that's why you're getting promoted but if you seem mean to people if you seem unfriendly to people why would someone want to promote you because when you go up the level what happens is you have to talk to a lot of people not just within your team but across teams right given that that you have to talk to them you should earn the trust of a manager hey this guy or this girl is someone who can talk to people in a very friendly way and is very jolly to work with that really matters and now that's when you earn the trust of a message you show you showcase this ability right and the best part is when you go up the level there are very few slots for example for every three to five software Engineers there is one senior software for every three to five senior software there is a tech lead for every three Tech lead roughly there is a principal engineer or a staff engineer right and so on and so forth so you see how it decays exponentially like buy a factor of three every Tech not exponentially but basically yeah by a factor of three every time like for every layer it happens like that so given that there are very few slots up the ladder what you need to ensure is you are the one for which like your manager should fight for your promotion not the other way right that's why earning the trust of him as is important in case a marriage is not reciprocating bring the topic up discussing things solves most of the problems right so go for that and and uh again uh just continuing on arpan's question the third one is around how do you highlight the value that you bring in every day do you conscious please showcase it every time you communicate or do you wait for the performance review meeting to showcase brilliant question number one thank you so much for asking this is again for a stellar career growth you should never wait for the performance review that happens right today now I'll showcase right these are the things that I did because in most cases you would have also forgot what you did right so what I do I personally do is my standup updates are very detailed very detailed I tell them the challenges that I faced so typically at almost all organization whenever someone briefs about standard updates they say hey talk these three points what have you done yesterday what will you do today and are there any blockers or not right I don't follow that template what I do is I tell them what I did yesterday that is fine but what I struggled how I solved now am I if I'm unblocked or not and what I'll do today now that struggle part that I am talking about that when you showcase that hey this is where I was facing this problem and this is how I solved it it not only builds the trust in the management hey this person is a problem solver this person is getting things done it gives him or her the much needed visibility when you give your manager that visibility then automatically you are building a very good presence in your tea that hey I talk stuff right so people love to hear engine exams especially we are all Engineers right so people love to hear that and while you are talking about it what might also happen is the issue that you are describing in a brief line it's not that you should blabber for 15 minutes right but other team members would know that hey you sought something similar they would come to you for help in case they are stuck on something similar and that would help you in getting those brownie points that hey this person is a team player right and that really matters when you want to climb up the ladder right so showcase the challenges that you faced and have you solved it in a very brief line every day in stand up periodically try to combine it like let's say monthly email or something you might have done some significant amount of work drop a note to your team that hey this is what we have achieved and I thank this this people who have helped me right because it's never that you are all alone doing it it is always a team's effort some other person might have helped you in some capacity gratitude showcase like say thank you to them formally over an email this showcases that you are a deep learner you are not someone who is just asking for help and getting things done on his or her side but are also showing the Gratitude towards others very very powerful and again thank you so much fabulous fabulous fabulous question that you ask okay uh one more question on uh it was asked by deepanshu is it a good time to switch jobs or to continue working at one job and handling freelancing work side by side now thinking this as career growth a lot of people I'll just twist it a bit around a career growth as in that hey is right now is it a good time to switch or not very subjective there are some companies that are hiring most of the companies are firing a lot of people would recommend you to stay at your current job and not make switches right but on the other hand you would still see some very high growth companies who are hiring who are hiring very aggressivity right so you might be tempted now in this uncertain times no one knows what would happen right so it's very subjective and I really cannot comment on that that if it's good time or not but in general let me twist this into a career group thing and uh say this that should you switch frequently or stay in the current job to get career growth right as simple as that so what I did uh I can talk from my experience I and it's not a crude generalization uh statutory warning uh what I did is I made very frequent switches in my career initial days right but then I had a very long stint at an academy so what I did I have a very simple formula like AVR Engineers like so we like cap theorem so this is my version of cap theorem it's called the 3p like so for me to evaluate my job I use this 3p method first P stands for PESA which means money second P stands for power which is your core competency your engineering skills your leadership skills and whatnot and third is position which denotes growth it's more about 3pi wanted to fit in so idea is to cover it in three bits easy to remember so PESA power position so when you think about this for any job you should get at least two out of this three if you are getting one you may think of switching I have been very aggressive and I've made a switch when I just get one but when I make king switch to any other company I'm eyeing for at least two it's very hard to get all three in a company it's it's almost impossible right but in most cases uh what would happen is you should be eyeing to get at least two out of these three right so when I make switches so for example I'll give you like my life Journey on that I joined D Shaw in 2015 post my masters right and that is where my actually career started before that I worked for a very small company called Saba softwares in pooling so 2015 is when my career started I joined D Shaw at that time didn't pay well so I didn't have money uh by the way my monthly salary was 40K in hand that's it uh now it pays in lacks that's a different case but I didn't get money uh the work that I did was around scraping web front office Visa work I didn't like that all uh so I didn't get uh Power which is my core competency I switched in one and a half months I went join tractor when I joined practo I chose devops team I got to learn new stuff I got decent hike okay enough right oh no actually I got almost 2x hack because my pay was so less uh practice at that time we used to pay 12 lakhs base I got 12 lakh base at that time so money was sorted uh Power was sorted because of core competency position I was a fresher what what would I do with growth or not right so that's why I made that switch similarly from practo to Amazon I made switch first something for Amazon to an academy I made sweet so this is one rule that I have been following for a very long time 3p root Paisa power position get at least two you need to have two at your current organization if not it's time to like you can think of switching if you're getting none then so definitely switch right so this is how I've been thinking now making frequent switches is good when you are getting this but far too many frequent switches does not look good again that's not right so initial switches make that but uh after certain time when you think that you are at the right place stay there my long stint at unacademy is proving out to be very helpful because now other companies perceive me as hey this is someone who would not who is not just keep growth Kelly is making frequent switches instead this guy is focused on staying there and making an impact plus when you stay in the organization for long enough you will make a big impact and when you get multiple promotions staying in the same organization says that hey this person not only stays but also makes an impact at work try to do that right because if you have that long stint with multiple promotion that looks beautiful on your resume every hiring manager loves it like when I used to hire folks I used to observe that right I still need I still require someone who is very hungry for growth but while at the same time staying in our organization making an impact right so that's a deadly combination so that's how you should approach career growth right in general making frequent switches and whatnot okay uh Anil uh how you decide when to change a company this is exactly what I answered so uh thanks for asking that question and I accidentally answered that uh that's great what else what else I'm just going through the chat in case I find anything interesting there oh that's a good one uh how to have effective one-on-one with EMS thanks ankush for asking uh great question a lot of people a lot of people are you know when it comes to one on one what happens is you typically and even I was at your pizza even I I sucked that one-on-one I didn't know you know how that happens what question should I ask and similar to how many interviews we get last question hey do you have any questions for me all good right one-on-ones is very important I realized it when I was on the other side right when I was conducting one-on-ones for my direct reports then I started pondering array I should have asked this I should have asked this right so what happens again very crucial uh how to have effective one-on-ones let's talk about it okay so one-on-ones uh what I right now do because now I used to be managing people now I'm back as an engineer so I have a reporting manager and a lot of one-on-ones happen so now what I do is I prepare for at least 15 minutes for my one-on-ones I every time every one-on-one I ask questions to my manager I am always open so few like a basic framework that I've used first I praise I praise I tell all the good things about the team about manager about work about everything because when a manager talks to you the first thing that he or she needs to know that hey are you with respect to your core competency happy or not because if you are not happy then there is very high chance that you are at Flight Risk and you would take the first flight and change the company right so when you are when you are really happy convey that we are always in a hurry to convey the bad information like the bad news I am not I'm not happy this guy told me there is this this happened in the office right so instead of cribbing start on a positive note this is what I always do always start on a positive note because typically when your manager says hey like you go into meeting room or start a zoom call or something your manager typically asks you this question hey what's up and they're saying no no no all good start speaking out the good things about the team the work the anything that you're doing anything good like start on a happy note and that breaks the tension that makes your manager comfortable that makes you comfortable you both are now in a comfortable space to talk something bad right so in case there are any concerns talk about it now it it may sound generic but now I'll go into little more specifics of that so what I do is 10 uh if I am assuming one-on-ones typically happens for 30 minutes so if you are one of them happen for 60 minutes ask your manager to chop it down uh if uh typically the 30 minutes good enough to discuss anything so on out of the 30 minutes 10 minutes I talk work no matter what a manager says hey let's be casual let's not talk about work always talk about work in your one-on-one for first 10 well like first happy thing then you then you spend 10 minutes roughly 10 minutes into uh one uh into talking about the work that you are doing right how you are finding the work are you seeing any challenges how are you solving it right those things really important because these are the things that you don't tell in your standups right it's very much possible that hey when your entire team is listening oh my God I should not be well I should not showcase my vulnerability and what not that that that are the things that come to your mind right so you do you got typical like Engineers by default are typically shine uh talking about their vulnerability so spend US 10 minutes talking about work uh talking about vulnerabilities uh are you doing good or not uh any blockers that you face then you start creeping in any discomfort that you have maybe with the team maybe with a team member maybe with someone from other team something around that always bring up that right now that work part is done 10 12 minutes it would take then you talk about because remember you started on a happy note you have to end on a happy note right you should never never start or end your one-on-one on a bad news note on a unhappy note never right and I'm giving you a very firm reason for it why whenever you start on another P note that makes your entire meeting boring right because then you are not focusing on the good parts but every like the entire Vibe becomes negative right and when you end on a bad news note or a bad note again that same thing because now you're married like array mood is ruined right I have to think about this so start and end on a happy note and the middle crunch the bad part it's a classic it's a classic sandwich method right whenever you want to convey the bad news sandwich a little bit in your happy things right so do that right now you when you talked about work then spend one or two minute talking about any long-term leave that you have or any leave that you are planning any one week two week leave that you are planning tell this thing in advance to imagine talk to talk about this in your one-on-one very important because you should not be the one who should be uh basically saying this at the last moment hey I'm going only right be very open about it because your manager is already juggling between a lot of stuff so give him or her less reason to worry about right no no abrupt surprises let's keep it open right and in general any concerns that you have around it but these are like basic things we should definitely talk about and in case of manager is very friendly you want to talk something personal go about it I have never done it uh if my one-on-one ends 10 minutes early I'm more than happy but I've never spoken about my personal life had to work for some reason I'm very closed about it like so that's my opinion but you but depending on how cool quote unquote cooler manager is go about it right okay even I have never thought about it brother thanks thanks for asking this now it is making me wonder so many things okay uh what else are asking Java experience how important is Tech stack for Korean in back end again very important for you to have a stellar career what tech stack you pick but don't be limited to One tech stack 100 you'll see a lot of job openings Java is a great language although I say negative things about it does not make it bad it's just a personal opinion take it with a pinch of salt uh and again I apologize in case I offended anyone with this but Java is a great language a little abuse here and there is like people have abused it that's why I hate it but I still code in Java then day out I code in Java uh go for it but with respect to Tech stack again career growth you should be flexible enough to adopt any Tech stack and I cannot emphasis I cannot stress this enough I'll just give you my personal Journey I was a tractor used to code in Python I joined an academy my job worked at Amazon I used to code in Java I worked at an academy I used to code in node.js and go I am joining Google I'm working in C plus you have it you should be very very very flexible with tech stack but but you should be excellent in one excellent in at least one of them for me it's Gohan python I write good Golan code I write good python code right I'm not I still code in Java decent enough I don't apply very fancy design patterns my code works it's very profound and same with C plus plus I may not write with best practices but it's decent enough to be shipped to production because anyway there would be code reviews right and but I'm still learning every day and being better right but I should be proficient quote unquote because no one's very proficient no one's an expert in anything but you should be very good had a particular language like a particular Tech stack but you should be flexible enough to learn a lot this way you would be able to adapt to any Tech stack join any team and make an impact because some good projects might have golang texture can you cannot just take array I know only Java and I cannot do go like you'll be missing out on good projects man don't don't do that right think on those lines that whatever the ask of the team or the project is spend extra hours learning that really really really really important right hoof great uh what else let me take one more question from this now I'll take two to five years is set let me take one tenth class like you folks would like you know uh let me take from uh five to ten years very very interesting one that would come out uh I'll pick one at random oh uh again one question promotion I have a video coming up tomorrow on getting promoted so that would solve like that would answer a lot of questions around promotions it is although it stays tough but you can just trim down a few points and apply it to your senior to uh sorry your software to senior software or senior software to Elite level thing right uh okay nice uh I have a s that's big one but uh wait how to pick up by working on okay this is a good one uh how to become a better engineer by working on not so a quote unquote hustle engineering work in most companies where we spend most of our time again really important for your career growth that one thing always remember this and I cannot stress this enough you should not rely on your company for your learning your organization that you work for should not be the sole source of learning you should always think about learning on the side no matter what for example if your company is working on a particular Tech stack you are not so happy about it you cannot just say oh because my experience did not allow me to work in let's say golang I'll not go and go like no that's not how you should think about it at the end you own your career you own your learning right so learn everything and anything that you can and ensure that you are not just relying on organization to do it now how do you do it let's say you are working 8 to 10 hours every day for an org now you say hey I don't have time to do it you everyone has time everyone has 24 hours in a day right sleep seven hours if you're flirt sleeping eight hours just reduce one R there you get sorry you get this extra 1R learning that right don't just rely on your company that hey my company gives me that kind of project then only I learn it because the best part is we are in an industry that is or rather we as Engineers we are softer engineer specifically we are not bound by practical experience as much as other things imagine doctors Doctor would not say I just read 10 research papers 20 books and now I am ready to operate they need practical experience right they need practical experience to to you know become better right or not even better to even just get started same thing with mechanical same thing with civil civil engineers can't just read books and say oh now I can build a big building because practical sum and Tom strength of materials and all that is really important right they need to have that physical exposure to things we are very fortunate it just takes us one Library one piece of software to spin up on our local machine and get things and we have all we all have laptops and whatnot do that do that that's really really really really really really important right don't just wait on your company to teach you stuff now now the next question that would come out hey but there are a ton of things to learn what should I learn if you spend time thinking what to learn you are actually wasting time pick anything just get started with it in case you find it boring switch but don't waste your time making that decision on what to learn next always remember pick the first book that you stumble upon buy the first course that you stumble upon and start with that instead of thinking the best thing the best resource the best book the best Mentor the best person to follow no start anywhere because right now you are at zero I'm assuming you're just starting out not just for your career uh but you are starting out with this people learning new things because you are at zero you don't I'll give a let me give a concrete example let's say the first thing you heard is grpc now instead of waiting to find the best book on jrpc or the best video on grpc or the best course on grpc pick the first damn thing that you got at hand and just start with it right A lot of people they don't what they lack is a lack bias for Action bias for Action means that whenever you are given something you how quickly are you acting on it that is bias for Action you should have a very strong bias for Action I have it I have very strong biasparks instead of just sitting and thinking about hmm what should I do this or that is this a good one is this the best one I start with literally anything with this strong base production what happens is you cover that Journey from zero to 0.10.2 very quickly when you do that you are suddenly in a state to know hey this is either boring so I can drop it I have basic understanding so I can skim it or I'm like or this is not good enough resources let me find a better one but at least you now have some knowledge some information some context about the thing that you are learning if it interests you you find the best one but be very brutal about it just get started a lot of people miss out on this they just take a lot of time to start it's like that vehicle which is not getting started you're just waiting to if it's if self start is not working hit the kickman and just get started don't wait for very long right so this is what uh I personally do help me a ton 100 recommended 100 would recommend this to all of you right okay great question thanks thanks for asking that okay let me pick one more could you pay anytime oh nice very good question 40s I have very much fear of 40s as everywhere I hear after 35 it is very difficult to get job can you tell something about this and how is this getting changed in it as India changed a lot of in past five years okay career growth again directly related to Career growth because you need to have a stellar career if you don't have Stellar career what would happen see if you are bound to a particular Tech stack if you are bound to particular tool and technology or a framework if that vanishes then what right it's again again as I say though the hierarchy or the or the pyramid that we are all part of right turn off software Engineers a third if you just see a factor of three right it's worse than that but let's assume factor of three for every three software engineer you have one senior software for every three senior software you have this so it slashes by a factor of three so we are pyramid tapers off very quickly at the top for you to have a long career you need to ensure that you are part of this pyramid for as long as possible Right which is where if you look carefully if you visualize it we think that this is not a pyramid this is a rectangle it grows like this we all joined as fresh as we all are getting promoted now we all are seeing a software we all are getting promoted together no it's not like that it's pyramid so now if you look closely in this pyramid things on the left half left is getting trimmed off on the right of right is getting trimmed off right so what you should do you should try to be in the middle how you are trying to be in the middle of the pyramid so that you don't get dreamed off the answer is very simple always and it does not mean you do hopping you find things that like you are not bound to a particular Tech stack that's step number one being irrelevant should be your biggest fear that's my biggest fear right so I'm driven by this that my biggest fear is I become irrelevant and I don't want to become irrelevant so which is why I keep learning new stuff I might be sound cynical that hey this guy doesn't have quote unquote life I have I've never lost smile on my face right and that's what really matters you should focus on learning and it is difficult I'm not even exaggerating it is difficult to continue your job post 40. unless you are continuously making an impact so Point number one don't bound yourself or don't bind your other don't bind yourself to a particular Tool Tech stack framework be open to learning new things be up be a positive learner be someone who is very curious about ticks step number one step number two try to make an impact at War if it requires you to put in extras do that make an impact that would make your resume shine you'll be much more confident you will get promoted in the same organization it would be easier for you to submit because you have practical experience matters a lot matter solid right these two things I would highly highly highly recommend you to do it now for example if you are stuck in a tech stack or stuck with a particular framework learn on the side very important you might take care that you're asking us to do everything man you can't help it it's very brutal out there you know like after 35 how things pan out it's very brutal and I and I cannot deny it man I cannot deny it because a third of slicing every level that to an a lenient way you know what's going to happen right so that's what I have been doing for a very long time it has helped me a time right so I would give you all the exact same advice right what worked for me but again take it with the picture yourself hey okay I'll take one more question uh now let me change the year of experience let me go with less than two okay less than two great what advice would you give oh this is a good question uh but it's again what I covered uh that's fine uh the by the way the customer just to give you all the context what advice would you give to someone who has around one year of experience working in a startup as an IC regarding switching companies both considering and without considering the present Market condition again what I repeated uh the in the second or third question that I repeated do that uh use a 3p formula to evaluate if you are there in the right place or not right I state that I stayed at an academy for five years because I was getting two P's and sometimes I used to get all three p's but once I know that I exhausted I'm I'm only getting one of them then I made a switch to Google and it was purely because of that so that is my framework of evaluation and I use it every day and I tell this in every Twitter space I'm part of this is what I have used to you know basically calibrate my career thanks okay uh what else what else what else what else uh let me switch on years of experience to more let's say we'll go to college student okay this is oh master's degree career growth let's talk about this should we do master's degree uh by the way thanks soham for asking that question should we have like how much does a master's degree matter in career progression direct question now I can talk about it I did my masters I did my masters from triple it Hyderabad I did my graduation from College of Engineering Pune College of Engineering Pune is a very well-known College in Maharashtra but outside of that very few people know about it so when I started my career out of college of Frederick Pune I joined a company called Saba softress now what happened is I always prepared for gate I loved diving deep into computer science and that was the natural I did what so at that time we had three options first either do an MBA second do an MS outside like from us or something and third do an M Tech I didn't want to do MBA I didn't want to go to us I had only one option empty so and I Was preparing for it in any way because we had nothing else to do in the evening so I used to do that when we back that we didn't have much internet as well so what happened is I was constantly preparing for git and that's why I have because of this I got very strong uh Computer Science Foundation because I prepared for gate solved questions read reference books and whatnot now because I Was preparing for gate I knew I could do mtech now then what happened is I went for an interview in Dell EMC Bangalore and I was paid less than what I was making at my existing company just because I didn't have the quote unquote brand with my name so that's what I got to know that College of Engineering Pune well known in Maharashtra no one knows outside it that was my moment to go for an M Tech first brand second I anyway wanted to dive DP to research culture so given that I knew that I had to do mtech then my string splitted into hey which one should I go for right another which college should I aim for so top three iits and triple it Hyderabad I only had this four options like after other if I'm not making it to this four or one of these four I'm gone right I'm not doing mtech because I wanted to drive deep into a research and all so uh what happened is my gate rank was 300 something I could not get into the top three IDs that I wanted so I appeared for triple it examination and I cracked it and I went to triple it I did Masters now did it help in my career progression yes it helped me because my b-tech college was not told my mtech college is so it shows in my resume no matter how people like how much people say that color does not matter I think saying that I'm from triple it Hyderabad does influence the other person I don't believe in it people do I can't help it right but again if I were only relying on my college name to get things done I wouldn't be me right that in combination with my hard work is what like it's what helped me become L6 in seven years right now what has happened there when I did this part now how Masters has helped me Masters I was much more serious than what like obviously 11 12 we are all Fed Up of studying then when we go to beat while we are in B Tech we don't Focus much on studies anyway we will do full chill and all right we are never serious about it then with that one year of expense that I had when I got to know why God no one knows my college no one gives me job because of my skills and what not I that it was an eye opener so I was 10x more serious while I was doing my masters it made me much more mature trust me I was very mature background I'm still immature but it's fine I became much more serious about my life about studies about learning it rewired my brain and now my brain would not have been divided if I would not have done Masters because I got that uh hunch in the beginning no one was giving me a like a good decent job not even a high that's when I had to do Masters and it rewired my brain for the better and then because my brain was rewired into learning learning learning I built this attitude of constantly learning and that has helped me it's it's not the things that I studied in Masters it might not be directly the things I was very studious while in muscles because I was very serious because of that experience that I had I focused on every single subject I'll tell you one quick fact final Year everyone sorry final semester everyone took project me and three of my friends we took four subjects in final semester where everyone chills we took four subjects going deep into maths I'll tell you the subjects artificial neural networks optimization methods uh smai uh statistical methods in Ai and one more was there I forgot ah and uh webmind all detailed all math we went all in we said anywhere pointer doesn't matter so let's take the hardest subjects out there right and that helped us that helped us in in challenging ourselves right so it's not directly the master's degree that helps you how you leverage your extra two years that you are getting of studying how serious you become that this is my view could be wrong take it with a pinch of salt right but this is what has helped me I build that ability I build that knack to learn new stuff I build an ability to tackle hard problems I build habit of reading papers from there during my masters it was not because and there in tripolitive and btec folks do that if they are serious they do it very deeply right I was very serious most of my friends were not I was constantly learning learning learning papers and this and that and projects I did every single assignment on my own and what not that helped me that helped me gain very good uh that helped me build very good foundation directly matters or not big question mark but how you leverage the two years that you get at Masters that depends a lot right I leverage it very well and that's what helped me right great question I'm so happy I'm doing this great okay uh this was good I was aiming to do this 45 minutes uh great question folks thank you so much for this next live stream when I'll do I'll definitely take other questions I'll post a brief note about it uh what I covered on my social media and on YouTube once again thank you so much thank you so much for and I'm again sorry that I could not take every questions but I have this chat saved I have all the questions that you folks added to Google form saved I'll take these questions I'll do this live streams more often than not uh I'll try to add as much value as I can thinking about career growth being a better engineer every single day right once again thank you thank you so much for doing this thank you so much for uh supporting me for thank you so much for resonating with hustle engineering it means a turn trust me I I couldn't be more happier than this right one second thanks thanks so much folks for today again uh again apologies because I could not take all the questions but uh definitely I'll do my best to cover uh the most unique questions that I get in the next one right thanks so much have a great night everyone uh see you in the next stream in any case I have videos coming up every now and then uh