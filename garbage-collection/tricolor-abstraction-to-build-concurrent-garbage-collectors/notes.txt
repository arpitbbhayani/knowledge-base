Shades of Grey in Garbage Collector

Shades of Grey in garbage collection Mark and collection sweep garbage Mark : start from root nodes and continue to mark the reachable objects whatever 's left is dead /garbage sweep : iterate to all objets in the heap and clean what's garbage Each object is in one of the three states live is live and is in use : object unprocessed : object is not yet processed object but its children to be processed processing : is seen is yet • " we know his shortest Dijkstra for path algorithm , but in 1976/78 he proposed a color abstraction for tracing GC Most modern * garbage collectors are concurrent the Tricolour Abstraction to speed up cleaning , and comes in super handy to ensure pause times correctness smaller and concurrency , ,

Tricolour Abstraction The object reference graph into is partitioned BLACK > object is LIVE GREY > object is seen but not yet processed completely WHITE > object is not yet seen Initially every node is WHITE , when a node is first encountered during coloured GREY when it has been scanned and its tracing it is , children identified it is coloured BLACK Root list If we visualize tracing based GC Black it of grey ← we can see as a weave nodes the object graph moving in the blacks the separating with whites untill all nodes turn black ← grey ,

How does tricolour abstraction make ? thing better collector must never reclaim the storage of live objects . Root list not linked → to any root Black node ← linked to white ← node is not yet seen candidate WHITE SET : nodes to be garbage collected BLACK SET nodes that have WHITE node : no outgoing edge to any nodes that are definitely live so no cleaning them up nodes reachable the root but to be GREY SET : from yet scanned its children nodes reachable from for . are the root and eventually will be in the black set BLACK GREY WHITE r r what's left in WHITE is garbage collected

Garbage Collection Flow set Pick object from Grey BLACK GREY WHITE and move it to Black set . r r colour each white node referenced as Grey and repeat the process . stack of our DFS ← scan is complete when the grey set is empty root Black objects are reachable from while objets are not and hence cleaned up Because the objects are always moved from White to grey & Grey to Black the algorithm preserves an important properly white Ensures that the white No black object references c- be the set can freed once This is called the Tricolour Invariant grey set is empty . But do this ? , why did . we

Single pass DFS is not fast but , 3 sets BLACK GREY WHITE by segregating it across . we can reduce the pause time Hiiiii " by putting a lot of threads at work set on grey halted Hence , the system is for a very short time . Through this , we make our system reactive ↳ instead monitor the sets and of periodically running GC , cue can if items > some threshold we can run a quick cleanup → Dijkstra lamport , This " " and 3 others method is to collect garbage is on - the - fly ↳ the colour of the nodes are changed by Mutter & not collector and hence the entire be made reactive instead GC can of periodic and it lays foundation for concurrent KC where mutates threads runs concurrently with the collector threads .