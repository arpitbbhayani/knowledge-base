How does a database guarantees reliability?

Write ahead - logging For database system Reliability is super important It any - , + does everything to guarantee reliable operations persistent Database MySQl . PostgreSQL Upon commit : - data / updates are stored on disk ( Non-volatile storage ) I, t. I Power loss 05 failure Hardware failure - Non-volatile storage safe from ¥ > Database > % Table update 636 Engineer update a row % - Index update - On disk as Bt trees Disk writes are complicated RAM > 05 Cache > Disk cache > Disk

Write Ahead logging standard method for ensuring → Data Integrity ¥ date Core idea : Before making changes to actual data files ( tables and indexes ) . log those changes sync describing the changes . PERIODIC Flow : Update triggered on DB - log the entry in WAL =] 63 63 to - makes changes in table 9 indexes = ① 60 Advantages of WAL log Datafiles we do not need to flush the data changes on every commit - - in case of crash we can recover by replaying the logs * - reduce the number of disk writes WAL file is sequential log → 1 disk write cost of logging the so , changes data file → update table lower than the is significantly update index cost of changing data files tree rebalance Point time is possible with WAL in recovery - - - < Apply INAL on a snapshot

Data integrity in WAL Every individual record in WAL is CRC -32 protected 1 tell record content correct we could if are → checked crash CRC CRC is during recovery . and replication y Record WAL is by default enabled by all the databases . Insert position t, 00000 CRC UPDATE t SET K: V log Sequence 100012 CRC DELETE t 00026 CRC INSERT V Number ( LSM ) 1 Byte offset into logs ] { 8143 page 161413 files segment 000000001 -