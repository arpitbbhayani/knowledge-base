Synch BFS in Distributed Systems

Synchronous BFS in distributed systems Breadth First search is critical a algorithm - in Distributed systems because it powers some key features like - Broadcast in minimum time Building topological understanding - Stat like Diameter and Topological - shortest nodes path across we discuss a synchronous BFS algorithm in which all nodes synchronize and move ahead with each round in sync . Output of BFS The output of this traversal is a < breadth first directed " spanning tree - 7 s s all nodes covered ceeilh min edges Each node knows its parent and its children * Node may be reach ead via multiple nodes but tree be the parent in BFS spanning . only one will

The algorithm Because the algorithm is synchronous nodes proceed in , sync initiates the total nodes say , node i. BFS and there are n . Round 1 : i. sends search message io L to its neighbours when an unmarked node receives the message to node it - it marks itself received message - updates its parent from Round the nodes who received in round L 2 : message sends search to its message i. going neighbours Out L The nodes takes the action > receiving j by marking themselves and continuing , the process . Eventually every single node will be covered tree and cue aeould be having a directed spanning

Complexity Analysis proceed every round the time taken to Given that the nodes . cover the entire network will be proportional to the farthest node diameter the network of The # messages exchanged communication be ie . complexity will at the number in the network Max of edges . > io Conveying child pointers L ^ " > node } With our BFS implementation every, < search message upon receiving an incoming , a s s its but how would parent knows parent a , ? know its children tree here * Outgoing edge child . we are building a spanning An node upon the search message would . receiving , it unmarked . update the local state with parent if marked . discard the message and inform back if the node is chosen as parent or non - parent

How would our algorithm terminate ? > io The most important part of any distributed < n algorithm is its termination . > ^ ? know that BFS is done HOW would the node < j n 5 s The approach we use is called Converge cast Core idea : respond to what if the nodes their parent only after they got response from their descending nodes kind like Post order traversal but in a distributed setup of . Nodes would respond back with parent / non - parent messages Instead of responding immediately , and we wait until we get response from descendents Thus the root node will , get response the entire network is covered only after . This is called Converge cast If edges are bi-directional then above approach , works directional then each node would if they are Uni - , trigger another BFS to inform the parent

Applications Broadcast If node distributed in : a a system wants to broadcast it a message M . can + - initiate the root a synch BFS with itself as . L The message will be propagated throughout 7 the tree from parent to children . > Distributed computation : In order to use the 7 < computation capability of the entire network y > the computation sent from root to all the > is a a back nodes and the results are propagated 7 to the root like order traversal a post - 1- the network Computing diameter of : Each node initiates a BFS and thus knowing the farthest node . The Max distances observed by each node is then flooded through another BFS compute Maxie diameter to the global . .