GitHub Outage Downtime they thought was avoided

Dissecting GitHub Outage avoided Downtime that they thought was On March 1 , 2021 - High error rate in Repo Check Service Jobs , failed on queued Search to - find workflow was returning incomplete results Context GitHub Actions are triggered RL R2 R3 when some / state event happens on a repo Actions Svc Before an action is run , a check suite is created * for every action All Checks Passed Repo changed → Action Triggered ↑ Create check suite When commit , we see checks you Run the action the on repository Upon every event that the check runs it is given a Unione ±☐ ← integer

given that checks run Table could upon every " commit ' explode will important event , . it would lead to lot this high freq a of check execution activity entries for each " " when table explodes any when there are large number of rows A 32 - bit integer that we insert in table , the table's column would exhaust at ~ 2B AUTO - INCREMENT ID Coulum might reach its limit . GitHub 's Anticipation and preparedness this ! they migrated all relevant GitHub anticipated and columns " " to BIKINT six Monts back But then , why are we talking about this ? ? What went wrong

? What exactly happened So , DB is not the check suite IDs exceeded IN -132 range culprit here ↳ GitHub Team already migrated DB columns GitHub uses some Graph QL library that supports IN-132 when unmars halting JSON ¥ JSON string to Object / Diet / Map when needs to some job run on repo IN -164 - create check suite ↓ ↳ creation check suite worked of fine because DB supported - processing the data failed ↳ someone would pull data from DB and process The executor / scheduler Puller < > When fetch data from DB Eg Failed ! " DB failed as it only supported 0 0 IN-132 . v v v ✓ Executor

Jobs failed to be queued Puller < > t Eg " Failed ! DB check suited were left in pending state 0 O u v v r Mitigation : Pushed a code fix Bo as to ensure that tasks are queued Executor for execution Another impact : search searching for workflows via UI & API was incomplete Es as say they €1 , use their search engine . Elasticsearch doc added should have an ID Every . Because the library was not able to pull data from DB , the indexed in ES workflows never got and hence search results were incomplete .