Piece Selection Algorithm

The Piece Selection Algorithm The that is to be shared original file in the network is split into equal sized pieces 256 KB to IMB PL P2 p3 A piece for a torrent is identified by 2013 SHAI hash and to download the file , we have to ask for pieces from the torrent tile peers participating in the network The performance of protocol depends ^ ^ the You on the order of pieces but why ? Torrent File because , we don't want to be in a situation where every peer has the same of pieces and all are stalled on seeder for the next f has the entire file

and what if the seeder leaves the network ? The download of the entire network !! would stop Hence , 1. to maximize the download speed the 2. minimize dependency on seeder we have to diversify the piece selection No one has this ! ! Rarest - First Piece Selection Algorithm Core idea Prioritize : downloading the piece that is rare say , peer A wants to download the file > Peer B so , it would start downloading pieces Peer A Peer C from its peer set { B , C } > A would send req to B and C checking the pieces they have and B and would C respond track pieces available By keeping a of with peers A would the prioritize requesting rarer piece .

Advantages of Rarest First downloaded ' ' 1. Spreading the seed : It ensures only new pieces are from the seeder , while peers trade other ^ ^ themselves pieces among > 2. Increased download speed : More peers have the pieces . faster download we'll get 3. Enabling upload : If you have a rare piece , other peers would want it from you . and thus due to Choke unhooked often algorithm . you'll get . < 4. Prevent piece rarer missing : By prioritizing rarest piece first we ensure that it does not go missing seeder left and now no peer has it

does ? How a peer compute rarest piece > Every has a set that it peer peer peer B the tracker Peer A got from . Peer C ways by > There are two which a peer can tell about the pieces they have Have " series of Have can be sent L . message : a messages by peers CB and c) , one for each piece & Peer A Peer B 6 > at the start the connection the 2. Bitfield message : of . send Bit A 1 21 , a peer can a field message to 12 '5 the . _ _ ' that has bits marked as I for pieces the peer holds Peer A Peer B Thus , the peer A can compute the rarest the network piece and fetch it on priority from Rarest is computed everytime receive piece we from ' ' have message the peers .

Random First Policy When a peer joins a network . it would need the piece as soon as possible because of reciprocation Peer will allow you to download . M only have to upload when you something CHOKED Because slower to download rare pieces are have downloaded if we < 4 pieces , we choose the next piece to request at random This would have ensure we quickly . and start to the network 4 pieces actively contributing * Once the first 4 pieces are downloaded , the peer switches from to rarest random first first . File Strict Priority Policy } Piece } Block A file is split into pieces and pieces are split into blocks . In each transfer . a block of a piece is transferred .

Given that a peer cannot contribute back to the P2 P2 network untill it has one complete piece ^ The pier will always prioritize downloading of all blocks of a piece before downloading P1 block other a of piece This ensures we prioritize completion of a piece before moving to next . End Game Mode This mode starts at the end when a peer has requested for all the blocks it needs and the transit request is in Request made i. e. download is about to finish waiting for response and peer is just waiting for responses Very heavy n n / w % complete the download quickly the peer , but happens only at All the the end sends request to peers in the peerset . and everytime it receives a block . it broadcasts CANCEL -