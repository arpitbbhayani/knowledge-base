Canary Deployments

Canary Deployments Canary deployment is a pattern that allows us to rollout code , features changes , to an initial subset of users / servers before we take it to 100% . v1 00 roll out to Canary roll out to 100% Of servers if all good , v10 1 if something is wrong , rollback Canary deployment thus acts as an Early Warning Indicator so that we could avoid a massive outage The be : flow would 1. deploy the new version to one server 2. monitor the vitals : CPU , RAM , error rates 3. test the changes explicitly on Canary 4 . if all good , rollout to remain g servers 5 . if something is wrong , rollback

" " ? Why the name Canary deployment In 1920s during coal the mining %) . miners used to Canaries into carry caged the coal mines . if there was a high level of toxic the to evacuate gas , the Canary would die , alerting miners . In our Canary deployment the few servers / users cue rollout to that our Canaries for us - provides early warnings if something goes wrong ? How Canary deployments are implemented We create a small parallel infrastructure and put a proxy like load Balancer or API gateway in front 5J . 7 < s r ¥ < > a 1 95% proxy

Pros of doing a Canary deployment - allows us to test the changes in production with real users > The fleet can be 0 < ¥ s r logically separate , < > < 1 or physically separate load Balancer API gateway - rollbacks are much faster Because the new version of code is deployed on only a few machines , rolling back our changes requires us to rollback only those few machines . 0% 0 < ¥ s r :< s r ' > 100%

- minimal blast radius " has " if the new version of code bugs with Canary deployment it would affect a very limited set of requests - Zero downtime deployments incremental rollout : 1% , 5% , 10% , 20% , 50% , 100T . could when unsure about the new release we deploy even are are - - We can use Canary setup to do AIB Testing eg : search v1 and search v2 monitor CTR side by side Note : Selection of servers / users can be more sophisticated geographical random selection sticky + - - - user cohorts - internal employees - random selection selection criteria is usecase specific - beta users

Cons of doing a Canary deployment - engineers will be habituated to test in production Testing should never happen in production , but if we have to test a Canary deployment we are encouraging engineers in the production environment , and slowly we may find most testing happening in production architect a deployment is complex ng Canary - Extra infra components : LB , API gateway separate scaling , policy . / instance container launch config ele . - parallel monitoring setup observability is super - important in Canary setup side comparison of vitals CPU RAM response times side by - . , . etc exceptions , . gym 100 CPU Utilization no 0

You absolutely need ↓ Canary When see wrote service you your - You would not do a 010L Auth Java. service to Smith from one another . Auth Golang has to be done This incrementally Proxy be moved to 100 1- of traffic Aum Service written golang ' will new in only after you have 100% confidence about the correctness of implementation