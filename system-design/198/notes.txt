Architecture of Pinterest s Time Series DB

Goku - Pinterest 's Time Series Database Great companies run on Analytics server ilseruiie They measure everything Cloud Time Series The data ( metrics , vitals , events ) Database is stored in a specialized Time Series Database 0 Ten Pinterest used Open TSDB to store the TS data and they ingest million points every second 0 but Open TSDB ( based on H Base ) has 1 GC issues Hence built Goku : A Open TSDB they . , > Time series DB 2. Crashes are common compliant Time Series Data Model 1- c. proc stat . . Cpu total . { host -_ec2 -1 , service = auth } = (1527724520,98-6) metric tags timestamp value Used for filtering points ( Exact , Wildcard , Regex ) Sum Max Min Aug Count Deviation Aggregators : . , , , , Down sampling One to point represent : ~ several points

Challenges and key Decisions 1. Scan : Open TSDB scans are inefficient disk based , bucketed Goku scans are fast in - memory . inverted index based ' ' 2. Data size : Goku uses Facebook 's In TSDB Gorilla memory - which 12K the box gives compression out of 3. Compute and Aggregation : Open TSDB scatters the request , gathers the data on one machine and then aggregates . 0 Goku does 1 aggregation on storage layer and then on and then the proxy results are sent to the client minimal data then / w * transfer over 4. Serialization : Open TSDB Uses JSON worst , too slow to serialize Goku uses Thrift Binary protocol

Architecture storage engine to Goku uses Facebook 's Gorilla in - memory store most recent data from past 24 hours . Each shard is a separate [ last 2 hour ] machine ( simplified assumption ) Holds most recent modifiable butter shard I Bucket map > Bucket -1.5 immutable . Time series Shard 2 > Bucket map FLUSH data + aya Bucket map Bucket storage shard 3 [ in - mem ] a 2 hour Buckets > Bucket Data > Bucket Data Each Goku instance evaluates > Goku Proxy and sends response to proxy , " '" " " Disk proxy does final aggregation and then responds . shard where it Given a data point , find a belong f- ( metric name ) i shard i i to Query is also metric specific . so cue know where go to