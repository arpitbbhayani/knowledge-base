Uber s Emergency SOS Service

Uber's Emergency SOS Service Emergency Button on Uber app is life saving sOg and when in an second matters emergency, every When the button is tapped emergency 1 critical and sent the nearest details are captured to local police current location i trip details 4 vehicle details - driver/rider details 2.the location is continuously sent and kept updated 3. an optional sits is compiled and sent to the First Responders 9. Uber's internal support leam is notified and they keep an eye on the vehicle movement a co-ordinate Capturing location When sos is pressed, we capture the apslocation to local police To make it simple for the first responders, authority and the rider to communicate me show and send the phone the address on 1. Reverse Geocoding < captured and broadcasted also, location should be continuously

How to notify local police? A third-party service named Rapidsos comes handy Rapidsos provides API to send data to the local police authority and we use it as a blackbox. -O > Emergency 7 -O Rapid so s -O Notifying other channels Local Police Authority We should not only polity local Police Authority but also internal support and contacts emergency *all these communications should be decoupled so that not other failure of one does affect so, a simple broken can be used here to decouple the notifications I Rapidsos *Just a schematic repr - support Y Emergency Contact

Reliability and Availability services involving emergency situations should be highly available & reliable 1. Kafka - persistence, at least once delivery 2. If Kafka down-fallback on sync APIs 3. no spot-horizontally scalable internal services a fallbacks for 3PT n an ad Architechre O Notification x< support * a uber 7 S upport keepingstilsreadyretails :... Y SYNC SYNC Rapidsos - Emergency :. ........... & O o< 2 Realtime location a nd API gateway 7 location location 1) ata 1. Create emergency 2. collect location and stream it (continuously caphored 3. Notify on various channel - Rapidsos, support, Contacts Emergency