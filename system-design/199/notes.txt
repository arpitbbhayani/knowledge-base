How Flipkart made their type- ahead search personalized

Hyper personalized Type - - ahead search at Flipkart when user is typing the query , suggest Sh the search terms shoes making it easier to look for products shirts instead of showing generic / popular suggestions . shorts what make it if we personalized ? Personalized suggestions ' ' sh > shoes > Given all the terms that match shirts crank them such that user 's shorts time to is minimized purchase Parameters of ranking No company could and would generate them I. Quality of the suggestion hence the check manually . on ? how popular the term is popularity : - does this term have results ? - performance : enough the term correct ? - grammar quality : is grammatically 2. Prefix : strong prefix , beginning of word , sub string 3. User Dependent : - past actions : context of previous search - user profile : historical purchases

Sh Sh Sh sports shoes casual shoes shirts Under 2000 shirts sneakers formal shirts Personalizing the suggestions The first approach and group users for each group generate suggestions But every user has its own unique journey hence them will not have the best outcome grouping so have to and rank personal level , we generate , on a the intent Understanding user Flipkart has taxonomy / catalog 15000 ) the entries in the tree Fashion 1 . closer , more similar they are clothing / browse / purchases can be clubbed 2 . past searcher Footwear and mapped on this taxonomy shoes and sandals grouped by similarity Jewellery Map the input to this tree and see what 's close to it and the intent Electronics get

Query -1-3 Query + -2 Query , _ , current term 4 Y -/ Category ,, category , -2 Category , , category Take last n' queries and its intent ( category ) ' Category Evaluate Prob that Category Similarity current is similar to T neg : - : computer monitor . Computer Mouse Evaluate Reformulation : Prob that user would reformulate query shoes red shoes nike under 2000 eg : , , Personalizing suggestions Training data for the model Sh sports shoes all viewed (clicked ) suggestions shirts for every prefix entered by a user score for clicked suggestion score t, for shown but not clicked suggestion The feature relationships were modelled 2 ingested decision trees ) in Xgboost ( and importance of each feature was quantified and evaluated .

level Architecture High Cache suggestions per prefix non - perv "" "& suggestions ,yg cache Auto suggest personalized suggestions > FI < < Big Data Pipelines SOLR LTR Rank JSON Model < ML ranking model Training Boost g Events / Data Platform A suggestion can be personalized or non - personalized based on search categories of previous searches . " " eg : Red shoes Nike shoes a shoes shoes Adidas shoes apple laptops