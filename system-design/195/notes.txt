How Instagram efficiently serves HashTags?

Serving Hashtags ordered by count ? Instagram uses Postgres as its main DB . Snow / For each Hashtag it stores the count of Snowman 2m " " associated with it snow white 1m media snowy 1m hashtag media _ count snow 500k * Instagram uses Elastic search for advanced usage and proposes to use Postage for this one Query : Executing this query have SELECT * FROM hashtags L to go through a large ' ' WHERE name LIKE snow % number of rows , ORDER BY DESC media - count filter out rows , and then LIMIT 10 ; sort ! This had to sort ~ 15000 rows query at scale this becomes a problem

Analyze Hashtags exhibit a long - tail pattern i.e. fewer tags have large # photos and large number of tags will have very few photos Tail long so , instead of going through all the hashtags , " " ? can we only go through hashtags that are popular enough ? Can hashtags that has than 100 photos we only index more Partial Indexes CREATE INDEX CONCURRENTLY Postgres supports partial indexes on hashtags ( name h pat ) keeping only _ subset data ie . a of WHERE media _ count > 100 ; in the index This the substantially reduces roues indexed and hence Superfast ! query runs With this change Postage had to sort only 169 instead 15000 ! ! roues of